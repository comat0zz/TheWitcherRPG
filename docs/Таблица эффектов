Данная таблица лежит в объекте Actor и содержит информацию обо всех эффектах, которыми "владеет" наш персонаж. 

Таблица представляет собой массив словарей:

{
	"id": "Уникальный идентификатор эффекта по отношению к текущему Actor. Предположим, что можно добавлять одинаковые эффекты, потому генерим уник ид каждому при добавлениию можно поставить ключем, чем каждый раз перебирать в поисках нужного",
	"effectId": "Идентификатор эффекта, который мы создали в Items. По данном идентификатору можем получить его дополнительные свойства",
	// Долго думал как лучше, всеже лучше продублировать часто используемые поля, чем каждый раз дергать выборку по эффектам
	"name": "Название эффекта",
	"img": "Изображение эффекта",
	"status": true или false , активность эффекта
	"onToken": "Отображать ли на токене как иконку, или только в чарнике. Возможные варианты:",
		"no" , Отображать только на чарнике
		"icon", Отображать как иконку на токене,
		"border", Отображать как рамку вокруг токена цветом color. color кладем в формулу
		"aura", Отображает ауру, вокруг токена цветом color. color кладем в формулу

	"category": "строка", Один из вариантов ниже: 
		"simple", Простой эффект
		"self", Срабатывает, если предмет с эффектом попадает в инвентарь
		"equip", Срабатывает, если предмет экипирован. Например, проклятая булава может лежать сколь угодно, но когда персонаж берет ее в руки...
		"attack", Срабатывает, если этим предметом кого то бьют, эффект перекинется на цель удара
		"use": Срабатывает, если предмет используют. Например, пьют банку, она восполняет +3ПЗ.
		"aura", все, кто рядом с персонажем, включая его самого, на расстоянии N метров. N лежит в формуле

	"activity" Когда триггер на предмете сработал, то происходит что-то c самим предметом, на котором эффект. возможные значения:
		"no" , ничего не происходит
		"remove", удаляется предмет
		"count", уменьшается значение N на единицу, по достижению нуля, при использовании предмета эффект не триггерит. Можно ставить тут false. N лежит в формуле
		"replace": "Заменяется на другой предмет" , ид предмета надо учесть в формуле в поле

	"target": "строка", то, как действует эффект, по какой сущности бьет триггер
		"no", ничего не меняет, просто есть
		"properties", характеристики персонажа ( навыки, скилы, атака, пз и тп исчисляемое, дает + или -)
			
		"generic", дает постоянный неисчесляемое свойство. например, темновиденье или слепоту. Тут нужно еще думать. плюс нужно учесть шансы наложения в saving 

	"formula": "json или строка, вероятно первое", содержащее нечто, что происходит, когда эффект тригерит

	"saving": "json или строка, вероятно первое", спасбросок, чтобы не получить эффект. может принимать пустой объект, тогда нет спасброска

	"time": "строка" , сколько висит эффект. Пока не думал в сторону чека времени, очень тонкая механика - игровое время отличается от реального. пока не учитывает это.	

}

Содержание formula для target.properties:

"type": "строка", stats, skills, attack, damage
"key": "строка", ключ унификации для type. например: type:skills key:ridding
"value": "число, на которое меняется. можно заложить формулой, например 1d6, куб посчитается в момент наложения эффекта"
"modifier": "+ -" как меняется итоговое значение

{"type": "stats", "key": "INT", "value": 3, "modifier": "+"}

Содержание saving: 

"type": "строка", stats, skills , то, чем проходят спас
"key": "строка", ключ унификации для type. например: type:skills key:ridding
"dc": сложность, число
"auto": 
	true - срабатываем автоматом, когда эффект ложится на персонажа, кидается от него бросок в чат, 
	false - у юзера будет кнопка, которую он должен тыкать для прохождения проверки 
